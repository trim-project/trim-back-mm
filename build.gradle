plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

bootJar { enabled = false }
jar { enabled = true }

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

subprojects { // 모든 하위 모듈들에 이 설정을 적용합니다.
	group 'com'
	version '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	// 관리하는 모듈에 공통 dependencies
	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		/* jackson */
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
	}

	test {
		useJUnitPlatform()
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

def modules = [
		"Trim-Api": "api",
		"Trim-Domain": "domain",
		"Trim-Common": "common"
]


// 각 서브모듈에 YML 복사 태스크 추가
modules.each { moduleName, configName ->
	project(":${moduleName}") {
		task copyYML(type: Copy) {
			from "${rootProject.projectDir}/config/${configName}/"
			include '*.yml'
			into "${projectDir}/src/main/resources/"

			doFirst {
				file("${projectDir}/src/main/resources/").mkdirs()
				println "Copying YAML files from config/${configName} to ${projectDir}/src/main/resources/"
			}
		}

		// processResources 전에 copyYML 태스크 실행
		processResources.dependsOn copyYML
	}
}
